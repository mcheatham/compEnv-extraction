For compute
-
bounded algorithms, a CPU
-
GPU performance comparison is informative when the speedup is measured against the theoretical peak performance speedup. For a single Intel Xeon CPU X5460 core at 3.16 GHz (used in this work), the peak theoretical performance for executing 2 operations on 4 single
-
precision variables in the SIMD (single instruction, multiple data) style per clock cycle is:Actual CPU vs. GPU timing comparisons are depicted in Fig. 5. We have programmed the CPU code with standard C/C++, without implementing any explicit Intel SSE SIMD instructions, or multi
-
threading using multi
-
cores. We have relied on the compiler (Intel C/C++ compiler version 12.0.4) to optimize automatically. We first compare the performance of the baseline algorithm between the CPU and GPU (this case is identical to the one shown in Fig. 3). The codes are very similar on both processors, except for fast memory management, which is explicit on the GPU (Sec.(3)). We find that the absolute GPU efficiency (∼ 8%) is larger than that of the CPU code (∼ 5%). The speedup scores 100. The increased speedup (100 vs 60) is consistent with the increase in efficiency (8% vs 5%).In what follows, we compare the operational throughput of several basic operations, which are the building blocks of our particle mover algorithm, on the Nvidia Geforce GTX580 GPU in the context of the roofline model.
