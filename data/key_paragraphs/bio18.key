To create the in vivo results presented in Figures 8 and 9, spectral diffusion was applied to a subvolume of 427×353×21 voxels with a computation time of ~4 minutes per iteration using MATLAB's parallel (CPU) computing toolbox and a Mac OS X workstation with dual, 2.66 GHz, quad-core Xeon processors and 16 GB of RAM. Although this computation time is substantial relative to highly efficient gradient regularization schemes such as total variation, the number of iterations required for convergence is very small (here, 3) thanks to the joint consideration of image gradients across component data sets. In future application, it may be possible to reproduce the results of spectral diffusion using highly-efficient GPU computing. The split Bregman method inherently sub-divides the required BF operations into two subproblems which can be solved in parallel (Equations 2.22, 2.23). Furthermore, a single joint filtration operation with a large domain can be sliced into several memory-efficient update steps where each update builds upon the previous update and covers a unique scale of derivatives (Elad 2002).
