In the test platform, the host (CPU) is Intel Xeon X5550 2.67 GHz with 24GB DDRIII-1333 RAM running the CentOS v5.3 operating system. The devices (GPU) have two NVIDIA Tesla C2050 cards with kernel v2.6.18. The C compiler is gcc v4.1.2 and the CUDA compiler is nvcc v3.0. The ClustalW v2.0.11 was compiled with the option ‘O2’ and the CUDA ClustalW v1.0 was compiled with the options ‘-arch=sm_13’ and ‘-use_fast_math’.
Another test platform was used to test CUDA ClustalW v1.0, G-MSA, ClustalW v2.0.11, T-coffee v10.00. r1613, and MUSCLE v3.8.425. In this test platform, the host is Intel i7CPU 920 2.67GHz (8 cores) with 6GB RAM running the Linux version 3.0.0-12-generic operating system. The device is one NVIDIA Tesla K20c card. The C compiler is gcc v4.4.6 and the CUDA compiler is nvcc v5.0. The test sets 1-4 above were also used to evaluate these four tools. Fig. 7 shows the overall execution time (represented by log10) by using these tools with four test sets. Due to the constraint in G-MSA, the test sets (100/1002) and (100/1523) cannot be aligned by G-MSA. From Fig. 7, MUSCLE v3.8.425 also is the fastest tool and T-coffee v10.00.r1613 is the slowest tool. However, for large size of test sets, the execution time by CUDA ClustalW v1.0 is close to that of MUSCLE v3.8.425. This result expands the range of applications by using ClustalW.
